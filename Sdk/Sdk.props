<Project>

  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.props" />

  <PropertyGroup>
    <LangVersion>preview</LangVersion>
    <EnforceCodeStyleInBuild Condition="'$(ProduceOnlyReferenceAssembly)' == ''">true</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>preview</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
  </PropertyGroup>

  <ItemGroup Condition="'$(ElskomSdkSkipImplicitPackages)' == ''">
    <!-- Only add these analyzers when installed as an Sdk package from nuget. -->
    <PackageReference Include="SonarAnalyzer.CSharp" IsImplicitlyDefined="true" Version="*-*">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" IsImplicitlyDefined="true" Version="*-*">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="IDisposableAnalyzers" IsImplicitlyDefined="true" Version="*-*">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- <PackageReference Include="ReflectionAnalyzers" IsImplicitlyDefined="true" Version="*-*" Condition="'$(ProduceOnlyReferenceAssembly)' == ''">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference> -->
    <!-- Generate code for resx files. -->
    <PackageReference Include="Microsoft.CodeAnalysis.ResxSourceGenerator" Version="*-*" Condition="'$(ProduceOnlyReferenceAssembly)' == ''">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- We need the source generator we created. -->
    <PackageReference Include="GitBuildInfo.SourceGenerator" IsImplicitlyDefined="true" Version="*-*" Condition="'$(ProduceOnlyReferenceAssembly)' == ''">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

</Project>
